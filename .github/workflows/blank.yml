name: Read PR Description

on:
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  update-changelog:
    runs-on: ubuntu-latest
    outputs:
      was_updated: ${{ steps.check-change.outputs.change_detected }}
      skip_steps: ${{ steps.check-changelog.outputs.skip_steps }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
          
      - name: Check for updated CHANGELOG.md using git
        id: check-changelog
        run: |
          if git diff --name-only origin/${{ github.base_ref }} | grep -q "^CHANGELOG.md$"; then
            echo "CHANGELOG.md has been updated."
            echo "::set-output name=skip_steps::true"
          else
            echo "ERROR: CHANGELOG.md has not been updated."
            echo "::set-output name=skip_steps::false"
          fi

      # - name: Check for CHANGELOG in commits
      #   id: check-changelog
      #   run: |
      #     commits=$(git log --oneline origin/${{ github.base_ref }}..${{ github.sha }} | grep -i changelog || true)
      #     if [[ -z "$commits" ]]; then
      #       echo "ERROR: No commit contains the word 'CHANGELOG' or 'changelog'."
      #       echo "::set-output name=skip_steps::true"
      #       exit 1
      #     else
      #       echo "Found commits with the word 'CHANGELOG' or 'changelog':"
      #       echo "::set-output name=skip_steps::false"
      #       echo "$commits"
      #     fi

      - name: Extract changelog info
        if: steps.check-changelog.outputs.skip_steps == 'false'
        id: extract-changelog
        run: |
          PR_DESCRIPTION="${{ github.event.pull_request.body }}"

          # Check if "changelog:" exists in PR description
          if [[ $PR_DESCRIPTION == *"CHANGELOG:"* ]]; then

            # Extract text after "changelog:"
            CHANGELOG_TEXT=$(echo $PR_DESCRIPTION | sed -n 's/.*CHANGELOG: \(.*\)/\1/p')

            echo "Extracted changelog: $CHANGELOG_TEXT"
            echo "::set-output name=changelog::$CHANGELOG_TEXT"
          else
            echo "No changelog information found in PR description please add the changelog note"
            exit 1
          fi

      - name: Check PR body against changelog
        if: steps.check-changelog.outputs.skip_steps == 'false'
        run: |
          if ! grep -Fq "${{ steps.extract-changelog.outputs.changelog }}" CHANGELOG.md; then
            LINE_NUMBER=$(awk '/^##/{print NR; exit}' CHANGELOG.md)
            sed -i "${LINE_NUMBER} a- ${{ steps.extract-changelog.outputs.changelog }} . (#${{ github.event.pull_request.number }})" CHANGELOG.md
            # echo "${{ steps.extract-changelog.outputs.changelog }}" >> CHANGELOG.md
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add CHANGELOG.md
            git commit -m "Update changelog with PR #${{ github.event.pull_request.number }} description"
            git push
          fi

      - name: check for changes
        id: check-change
        run: |
          if git diff --name-only HEAD^ HEAD | grep 'changelog.md'; then
            echo "No Changes detected, setting flag to false"
            echo "::set-output name=change_detected::false"
          else
            echo "::set-output name=change_detected::true"
          fi

  check_changelog:
    needs: update-changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Verify Changelog update
        run: |
          if [ "${{ needs.update-changelog.outputs.was_updated }}" != "true" ]; then
            echo "CHANGELOG.md not updated, please update CHANGELOG.md with the changes made in the pull request"
            exit 1
          else
            echo "changelog was updated successfully."
          fi
